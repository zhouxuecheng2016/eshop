
微服务的技术栈
1 领域驱动设计(DDD)：微服务建模
领域驱动的设计思想，可以去分析系统，完成建模的设计

2 Spring Cloud：基础技术架构
各个服务之间怎么知道对方在哪里 -> 服务的注册和发现

服务之间的调用怎么处理，rpc，负载均衡
服务故障的容错
服务调用链条的追踪怎么做
多个服务依赖的统一的配置如何管理

(1)Eureka注册中心
发布一个eureka注册中心，然后也知道如何发布一个服务注册到eureka server

(2)Ribbon+Rest调用负载均衡
通过ribbon+rest，RestTemplate调用rest服务接口，ribbon多个服务实例的负载均衡

(3)Fegion声明式服务调用


3 DevOps：自动化+持续集成+持续交付+自动化流水线，将迭代速度提升到极致
如果要将微服务的开发效率提升到最高，DevOps，全流程标准化，自动化，大幅度提升你的开发效率

4 Docker：容器管理大量服务
微服务，一个大型的系统，可以涉及到几十个，甚至是上百个服务，比较坑，怎么部署，机器怎么管理，怎么运维


