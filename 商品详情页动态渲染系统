商品详情页的多模板化
		多套模板：聚划算、天猫超市、淘抢购、电器城
		不同模板的元数据一样，只是展示方式不一样
		不同的业务，商品详情页的个性化需求很多，数据来源也很多

	商品详情页结构
		时效性比较低的数据
			一个商品详情包含了不同的维度
			商品维度：标题，图片，属性，等等
			主商品维度：商品介绍，规格参数，等等
			分类维度
			商家维度
			时效性比较低的数据
		        其实后面会讲解，都是在一个商品详情页被访问到的时候，将数据动态直接渲染/填充到一个html模板中去的
				在浏览器展现的时候，数据写死在html里面，直接就出来了
				因为比如说，一个商品的数据变更了，可能是异步的去更新数据的，也许需要5分钟，或者10分钟的时间，才能将变更的数据反映的商品详情页中去
		实时性较高的数据
			实时价格、实时促销、广告词、配送至、预售、库存
			ajax异步加载
			在访问商品详情页的时候，价格、库存、促销活动、广告词，都没有直接写死到html中，直接是在html里放了一个js脚本
			然后在html在浏览器显示出来的时候，js脚本运行，直接发送ajax请求到后端
			后端接口，直接查询价格、库存、促销活动、广告词，最新的数据
			只要你变更了数据，那么在下一次商品详情页展示的时候，一定可以将最新的数据展示出来


架构设计
			系统架构设计
				依赖服务有数据变更发送消息到MQ
				数据异构Worker服务监听MQ中的变更消息，调用依赖服务的接口，仅仅拉取有变更的数据即可，然后将数据存储到redis中
				数据异构Worker存储到redis中的，都是原子未加工数据，包括商品基本信息、商品扩展属性、商品其他信息、商品规格参数、商品分类、商家信息
				数据异构Worker发送消息到MQ，数据聚合Worker监听到MQ消息
				数据聚合Worker将原子数据从redis中取出，按照维度聚合后存储到redis中，包括三个维度
					基本信息维度：基本信息、扩展属性
					商品介绍：PC版、移动版
					其他信息：商品分类、商家信息
				nginx+lua，lua从redis读取商品各个维度的数据，通过nginx动态渲染到html模板中，然后输出最终的html
			如何解决所有的问题
				更新问题：不再是生成和推送html片段了，不再需要合成html，直接数据更新到redis，然后走动态渲染，性能大大提升
				全量更新问题：数据和模板分离，数据更新呢就更新数据，模板更新直接推送模板到nginx，不需要重新生成所有html，直接走动态渲染
				容量问题：不需要依赖nginx所在机器的磁盘空间存储大量的html，将数据放redis，html就存放模板，大大减少空间占用，而且redis集群可扩容
